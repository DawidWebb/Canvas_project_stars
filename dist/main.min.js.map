{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","constructor","canvas","this","width","window","innerWidth","height","innerHeight","ctx","getContext","lastUpdate","lastConstellation","nextConstellation","Math","random","initCanvas","fillStyle","fillRect","generateStars","count","stars","radius","push","x","y","originalRadius","speed","color","updateStars","forEach","star","delta","drawStars","save","drawStar","restore","beginPath","translate","moveTo","rotate","PI","lineTo","fill","drawOverlayer","gradient","createRadialGradient","addColorStop","generateRandomConstellation","constellation","filter","slice","round","isClosed","updateConstellation","drawConstellation","starsCount","length","firstStar","lastStar","strokeStyle","lineWidth","nextStar","stroke","draw","now","requestAnimationFrame","run","document","querySelector"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class Sky {\n  constructor(canvas) {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.lastUpdate = 0;\n    this.lastConstellation = 0;\n    this.nextConstellation = Math.random() * 1000 + 500;\n  }\n\n  initCanvas() {\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n\n    this.ctx.fillStyle = \"#000\";\n    this.ctx.fillRect(0, 0, this.width, this.height);\n  }\n\n  generateStars(count) {\n    let stars = [];\n    for (let i = 0; i < count; i++) {\n      const radius = Math.random() * 2 + 2;\n      stars.push({\n        x: Math.random() * this.width,\n        y: Math.random() * this.height,\n        radius: radius,\n        originalRadius: radius,\n        speed: Math.random(),\n        color: \"#fff\",\n      });\n    }\n\n    this.stars = stars;\n  }\n\n  updateStars() {\n    this.stars.forEach((star) => {\n      star.x += (star.speed * this.delta) / 100;\n      star.y -= (star.speed * (this.width / 2 - star.x)) / 3000;\n      star.radius = star.originalRadius * (Math.random() / 5 + 0.9);\n\n      if (star.x > this.width + star.radius) {\n        star.x = -star.originalRadius;\n      }\n    });\n  }\n\n  drawStars() {\n    this.ctx.save();\n    this.stars.forEach((star) => {\n      this.drawStar(star);\n    });\n    this.ctx.restore();\n  }\n\n  drawStar(star) {\n    this.ctx.save();\n    this.ctx.beginPath();\n    this.ctx.fillStyle = star.color;\n    this.ctx.translate(star.x, star.y);\n    this.ctx.moveTo(0, 0 - star.radius);\n    for (let i = 0; i < 5; i++) {\n      this.ctx.rotate(Math.PI / 5);\n      this.ctx.lineTo(0, 0 - star.radius * 2);\n      this.ctx.rotate(Math.PI / 5);\n      this.ctx.lineTo(0, 0 - star.radius);\n    }\n    this.ctx.fill();\n    this.ctx.restore();\n  }\n\n  drawOverlayer() {\n    this.ctx.save();\n    let gradient = this.ctx.createRadialGradient(\n      this.width / 2,\n      this.height / 2,\n      200,\n      this.width / 2,\n      this.height / 2,\n      this.width / 2\n    );\n    gradient.addColorStop(0, \"rgba(0, 0, 0, 0)\");\n    gradient.addColorStop(1, \"rgba(0, 0, 0, 0.75)\");\n    this.ctx.fillStyle = gradient;\n    this.ctx.fillRect(0, 0, this.width, this.height);\n    this.ctx.restore();\n  }\n\n  generateRandomConstellation() {\n    const x = (this.width / 2) * Math.random() * 1.5 - 0.5;\n    const y = (this.height / 2) * Math.random() * 1.5 - 0.5;\n    const radius = Math.random() * (this.height / 2 - 200) + 100;\n\n    this.constellation = {\n      stars: this.stars\n        .filter(\n          (star) =>\n            star.y > y - radius &&\n            star.y < y + radius &&\n            star.x > x - radius &&\n            star.x < x + radius\n        )\n        .slice(0, Math.round(Math.random() * 5 + 3)),\n      isClosed: Math.random() < 0.5,\n      width: 5,\n    };\n  }\n\n  updateConstellation() {\n    if (this.constellation.width > 0)\n      this.constellation.width -= this.delta / 300;\n    else this.constellation.width = 0;\n  }\n\n  drawConstellation() {\n    const { stars, isClosed, width } = this.constellation;\n    const starsCount = stars.length;\n\n    const firstStar = stars[0];\n    const lastStar = stars[starsCount - 1];\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(firstStar.x, firstStar.y);\n    this.ctx.lineTo(stars[1].x, stars[1].y);\n    if (width > 0) this.ctx.strokeStyle = \"#f7edad\";\n    this.ctx.lineWidth = width;\n\n    for (let i = 1; i < stars.length - 1; i++) {\n      const star = stars[i];\n      const nextStar = stars[i + 1];\n      this.ctx.moveTo(star.x, stars[i].y);\n      this.ctx.lineTo(nextStar.x, nextStar.y);\n      this.ctx.stroke();\n    }\n\n    if (isClosed) {\n      this.ctx.moveTo(lastStar.x, lastStar.y);\n      this.ctx.lineTo(firstStar.x, firstStar.y);\n      this.ctx.stroke();\n    }\n  }\n\n  draw(now) {\n    this.delta = now - this.lastUpdate;\n\n    this.ctx.fillStyle = \"#000\";\n    this.ctx.fillRect(0, 0, this.width, this.height); // clear canvas\n\n    this.drawStars();\n\n    this.updateStars();\n\n    this.drawConstellation();\n    this.updateConstellation();\n\n    if (now - this.lastConstellation > this.nextConstellation) {\n      this.lastConstellation = now;\n      this.nextConstellation = Math.random() * 1000 + 3000;\n      this.generateRandomConstellation();\n    }\n\n    this.drawOverlayer();\n\n    this.lastUpdate = now;\n    window.requestAnimationFrame((now) => this.draw(now));\n  }\n\n  run() {\n    this.initCanvas();\n    this.generateStars(500);\n    this.generateRandomConstellation();\n    this.draw(0);\n  }\n}\n\nconst sky = new Sky(document.querySelector(\"#canvas\"));\n\nsky.run();\n\n// ctx.fillStyle = \"#ff0000\";\n// ctx.fillRect(0, 0, 100, 50);\n\n// ctx.beginPath();\n// ctx.lineWidth = 3;\n// ctx.strokeStyle = \"green\";\n// ctx.moveTo(50, 50);\n// ctx.lineTo(100, 100);\n// ctx.lineTo(200, 150);\n// // ctx.closePath();\n// ctx.stroke();\n\n// class Sky {\n//   constructor(canvas) {\n//     this.canvas = canvas;\n//     this.ctx = canvas.getContext(\"2d\");\n//     this.width = window.innerWidth;\n//     this.height = window.innerHeight;\n//     this.lastConstellation = 0;\n//     this.nextConstellation = Math.random() * 3000;\n//     this.constellation = {\n//       stars: [],\n//       isClose: false,\n//       width: null,\n//     };\n//   }\n//   initCanvas() {\n//     this.canvas.width = this.width;\n//     this.canvas.height = this.height;\n\n//     this.ctx.fillStyle = \"black\";\n//     this.ctx.fillRect(0, 0, this.width, this.height);\n//   }\n\n//   generateStars(count) {\n//     let stars = [];\n\n//     for (let i = 0; i < count; i++) {\n//       const radius = Math.random() * 3 + 2;\n\n//       stars.push({\n//         x: Math.random() * this.width,\n//         y: Math.random() * this.height,\n//         radius: radius,\n//         originalRadius: radius,\n//         color: \"#fff\",\n//         speed: Math.random() + 0.25,\n//       });\n//     }\n\n//     this.stars = stars;\n//   }\n\n//   drawstars() {\n//     this.stars.forEach((star) => {\n//       this.drawStar(star);\n//     });\n//   }\n\n//   updateStars() {\n//     this.stars.forEach((star) => {\n//       star.x += star.speed;\n//       star.y -= (star.speed * (this.width / 2 - star.x)) / 3000;\n//       star.radius = star.originalRadius * (Math.random() / 4 + 0.9);\n\n//       if (star.x > this.width + 2 * star.radius) {\n//         star.x = -2 * star.radius;\n//       }\n//     });\n//   }\n\n//   generateRandomConstellation() {\n//     const x =\n//       this.width / 2 + Math.random() * 0.8 * this.width - this.width / 2;\n//     const y =\n//       this.height / 2 + Math.random() * 0.8 * this.height - this.height / 2;\n//     const radius = (this.height / 2) * Math.random() * 0.5 + 0.5;\n\n//     this.constellation = {\n//       stars: this.stars\n//         .filter((star) => {\n//           return (\n//             star.x > x - radius &&\n//             star.x < x + radius &&\n//             star.y > y - radius &&\n//             star.y < y + radius\n//           );\n//         })\n//         .slice(0, Math.round(Math.random() * 5 + 3)),\n//       isClosed: Math.random() < 0.5,\n//       width: 5,\n//     };\n//   }\n\n//   updateConstellation() {\n//     if (this.constellation.width > 0) {\n//       this.constellation.width -= 0.025;\n//     } else this.constellation.width = 0;\n//   }\n\n//   drawConstellation() {\n//     const { stars, isClosed, width } = this.constellation;\n//     const starCount = stars.length;\n\n//     if (starCount > 2) {\n//       const firstStar = stars[0];\n\n//       this.ctx.beginPath();\n//       this.ctx.moveTo(firstStar.x, firstStar.y);\n//       this.ctx.lineTo(stars[1].x, stars[1].y);\n\n//       for (let i = 1; i < starCount - 1; i++) {\n//         const nextStar = stars[i + 1];\n//         this.ctx.lineTo(nextStar.x, nextStar.y);\n//       }\n\n//       if (isClosed) {\n//         this.ctx.lineTo(firstStar.x, firstStar.y);\n//       }\n//       this.ctx.strokeStyle = \"#f7eada\";\n//       this.ctx.linewidth = width;\n//       this.ctx.stroke();\n//     }\n//   }\n\n//   drawOverlayer() {\n//     let gradient = this.ctx.createRadialGradient(\n//       this.width / 2,\n//       this.height / 2,\n//       250,\n//       this.width / 2,\n//       this.height / 2,\n//       this.width / 2\n//     );\n//     gradient.addColorStop(0, \"rgba(0,0,0,0\");\n//     gradient.addColorStop(1, \"rgba(0,0,0,0.75\");\n\n//     this.ctx.fillStyle = gradient;\n//     this.ctx.fillRect(0, 0, this.width, this.height);\n//   }\n\n//   clearCanvas() {\n//     this.ctx.fillStyle = \"#000\";\n//     this.ctx.fillRect(0, 0, this.width, this.height);\n//   }\n\n//   drawStar(star) {\n//     this.ctx.save();\n\n//     this.ctx.fillStyle = star.color;\n\n//     this.ctx.beginPath();\n//     this.ctx.translate(star.x, star.y);\n//     this.ctx.moveTo(0, 0 - star.radius);\n\n//     for (let i = 0; i < 5; i++) {\n//       this.ctx.rotate((Math.PI / 180) * 36);\n//       this.ctx.lineTo(0, 0 - star.radius * 0.5);\n//       this.ctx.rotate((Math.PI / 180) * 36);\n//       this.ctx.lineTo(0, 0 - star.radius);\n//     }\n\n//     this.ctx.fill();\n//     this.ctx.restore();\n//   }\n\n//   draw(now) {\n//     this.clearCanvas();\n//     this.drawstars();\n//     this.updateStars();\n//     this.drawConstellation();\n//     this.updateConstellation();\n//     this.drawOverlayer();\n//     if (now - this.lastConstellation > this.nextConstellation) {\n//       this.lastConstellation = now;\n//       this.nextConstellation = Math.random() * 3000 + 1000;\n//       this.generateRandomConstellation();\n//     }\n//     window.requestAnimationFrame((now) => this.draw(now));\n//   }\n\n//   run() {\n//     this.initCanvas();\n//     this.generateStars(500);\n\n//     this.draw();\n//   }\n// }\n// const sky = new Sky(document.querySelector(\"#canvas\"));\n// sky.run();\n"],"sourceRoot":""}